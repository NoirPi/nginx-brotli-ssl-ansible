# Main NGINX configuration (nginx.conf)

load_module modules/ngx_http_brotli_filter_module.so;
load_module modules/ngx_http_brotli_static_module.so;
load_module modules/ngx_http_cookie_flag_filter_module.so;
load_module modules/ngx_http_fancyindex_module.so;
load_module modules/ngx_http_headers_more_filter_module.so;


# User and worker settings
user nginx;
worker_processes auto;  # Adjusts based on available CPU cores for optimal performance

# Error log and PID file
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Events block for connection handling
events {
    worker_connections 1024;  # Increase if you expect high traffic
    use epoll;                # Efficient event processing on Linux
    multi_accept on;          # Accept as many connections as possible
}

# HTTP block for handling web traffic
http {
    # Disable nginx version number in responses
    server_tokens off;
    # manipulate Server response
    more_set_headers 'Server: {{ nginx_server_header }}';

    brotli on;
    brotli_comp_level 11;
    brotli_static on;
    brotli_types text/plain text/css text/xml text/javascript text/x-component application/xml application/xml+rss application/javascript application/json application/atom+xml application/vnd.ms-fontobject application/x-font-ttf application/x-font-opentype application/x-font-truetype application/x-web-app-manifest+json application/octet-stream font/opentype font/truetype font/eot font/otf font/woff2 image/svg+xml image/x-icon image/vnd.microsoft.icon image/bmp image/jpeg image/png image/webp;


    # Log format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

#    log_format cloudflare '$http_cf_connecting_ip - $remote_user [$time_local] '
#    '"$request" $status $body_bytes_sent '
#    '"$http_referer" "$http_user_agent" "$http_x_forwarded_for"';

#    access_log /var/log/nginx/access.log cloudflare;


    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # SSL settings (Strong defaults)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';

    # General performance optimizations
    sendfile on;               # Efficient file transmission
    tcp_nopush on;             # Reduces number of packets sent
    tcp_nodelay on;            # Send responses faster
    keepalive_timeout 65;      # How long to keep connections alive
    types_hash_max_size 2048;  # Adjust for large MIME types list

    # Gzip compression
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 5;         # Compression level (1-9)
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # File caching
    open_file_cache max=5000 inactive=20s;  # Cache file lookups for performance
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;


    # Set a cache for responses
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;

    # Limit client request size to avoid abuse
    client_max_body_size 64M;

    # Security headers
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "no-referrer-when-downgrade";

    # Buffers (avoid buffering issues with large responses)
    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 32k;

    # Include all virtual host configurations
    include /etc/nginx/conf.d/*.conf;
#    include /etc/nginx/cloudflare.conf;


    # Health check endpoint (optional)
#    server {
#        listen 8080;
#        server_name localhost;

#        location /healthz {
#            access_log off;
#            add_header 'Content-Type' 'application/json';
#            return 200 '{"status":"Healthy!"}';
#        }
#    }
}
